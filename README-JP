memcalc

memcalc は bison, flex の勉強しながら書いた副産物です。
簡単な機能しか備えていない、単純な言語です。

ライセンスはbison, flexの義理を感じるので GPL2 です。



ビルド・インストール方法：
        bison, flex, autoconf, automake, libtool の入ってる環境にて

        ./autogen.sh --prefix=/usr/local
        make
        sudo make install

アンインストール方法：
        sudo make uninstall



サンプルコード：
        sample/ 以下にテストに使ったコードの残骸がいろいろ残してあります。



言語の全機能・仕様の説明：

        命令の最後には ; を付けます。
        C言語と同じです。


        全ての変数は大域変数となります。型は double 型のみです。
        C言語のようなインスタンス宣言は必要ありません。
        例：
                a = 1;

                a = 1.4142;



        名前の最後に : を付けるとラベルになります。
        goto のジャンプ先の行として使います。
        （ラベルの最後には ; は不要です）
        例：
                L:

                label:



        goto ラベル名;
        によって、その行へジャンプできます。
        例：
                goto L;

                goto label;



        if 条件 then 命令１ else 命令2
        この場合は、各命令は１命令のみです。（複数命令は書けません）
        例：
                if a == 1 then b = 1;

                if a != 1 then goto label;

                if a >= 1 then b = 1; else c = 1;

                注意：入れ子に書く場合は、
                　　　then のみの場合でも明示的に else ; とする必要があります。
                　　　（else ぶら下がり問題の対策として）
                例：
                        if a == 1 then
                                if b == 1 then c = 1 else ;
                        else
                                if d == 1 then e = 1 else f = 1;
                        （２行目の明示的な else ; が無いと、
                        　３行目の else を、if b == 1 の else として判断してしまいます）



        if 条件 then { 命令1; 命令2; ... } else { 命令1; 命令2; ... }
        括弧を用いて、分岐先に複数命令を書けます。
        例：
                if a == 1 then {
                        b = 1;
                        c = 2;
                        d = 3;
                } else {
                        b = 0;
                        c = 0;
                        d = 0;
                }

                入れ子にもできます
                例：
                        if a == 1 then {
                                if b == 1 then {
                                        goto label_a;
                                        b = 0;
                                } else {
                                        goto label_b;
                                        b = 0;
                                }
                        } else {
                                a = 1;
                        }
	バグ：
		括弧の中でgotoを使うと不具合が起きる。
		また、括弧の中に複数命令を書いても、不具合が起こる。
		ようするに、まともに動いてないです。現状。
		誰か修正してください。



	/* 文字列 */
	
	// 文字列（改行まで）
	
	c スタイル、および c++ スタイルのコメントが書けます。
	例：
		a = 1; // ここにコメントを書く

		/* デバッグなどで複数行を手軽に無効にしたい場合等
		a = 1;
		b = 2;
		c = 3;
		*/



        print(変数);
        変数の数字を画面に表示します。
        数字しか表示できません。そんなもんです。
        例：
                a = 1;
                print(a);



        putpixel(x座標, y座標, 色相, 彩度, 明度);
        画面に１ピクセルの点を打ちます。
        色相は 0 ～ 2π 、彩度、明度はそれぞれ 0 ～ 1 の範囲で指定します。
        例：
                putpixel(100, 200, 0, 1, 1);
                （x = 100, y = 200 の座標に、RGBが #FF0000 の点を打ちます）

                putpixel(100, 200, 3.14, 1, 1);
                (x = 100, y = 200 の座標に、RGBが #00FFFF の点を打ちます）

        注意；
                画面解像度が 1920 x 1080, 24bit で決め打ちなので（私のPCの画面解像度です）
                各自が自分でソースコードを修正して、自分のPCの画面解像度に合わせてください。

                func_putpixel.c の
                screen_width, screen_height がそれです。

                もしくは、自動的に解像度判別して対応できるコードを書いて、
                GPL2ライセンスでパッチを送りましょう。



以上。
できることはこれだけです。
